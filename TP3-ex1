class Rectangle():
    '''
    Cette class crée un rectangle qui a deux paramètres : une longueur et une largeur.
    '''
    def __init__(self, longueur : float, largeur : float):
        self.longueur = longueur
        self.largeur = largeur

    def get_longueur(self):
        return self.longueur

    def set_longueur(self, longueur):
        if not isinstance(longueur,float):
            raise Exception("pas un float")
        self.longueur = longueur

    def get_largeur(self):
        return self.largeur

    def set_largeur(self, largeur):
        if not isinstance(largeur,float):
            raise Exception("pas un float")
        self.largeur = largeur

    def perimetre(self):
        return 2 * (self.longueur + self.largeur)

    def aire(self):
        return self.longueur * self.largeur

    def est_carre(self):
        #si le rectangle est carré (longeur == largeur), la fonction renvoie True, sinon False
        if self.longueur == self.largeur:
            return True
        else:
            return False

    def le_plus_grand(self, other):
        if self.aire() > other.aire():
            return self
        elif other.aire() > self.aire():
            return other
        else:
            return self

    def afficher(self):
        if self.est_carre() == True:
            print(f"Longueur : {self.longueur} - Largeur : {self.largeur} - Périmètre : {self.perimetre()} - Aire : {self.aire()} - {'C est un carré'}")
        else:
            print(
                f"Longueur : {self.longueur} - Largeur : {self.largeur} - Périmètre : {self.perimetre()} - Aire : {self.aire()} - {'Ce n est pas un carré'}")

def main():
    '''
    Initialise deux rectangles pour tester, les données peuvent être modifiées.
    Ils sont ensuite affichés puis comparés et le plus grand est à nouveaux réaffiché.
    '''
    rectangle1 = Rectangle(1, 2)
    rectangle2 = Rectangle(3, 3)
    rectangle1.afficher()
    rectangle2.afficher()
    print(f"Le plus grand rectangle est : ",end=" ")
    rectangle1.le_plus_grand(rectangle2).afficher()

if __name__ == "__main__":
    main()
